

import cpauto
import sys


class CheckPointFinder(object):
    def __init__(self, session):
        self.session = session
            
        
    def findNetworkUIDs(self):
        networks = cpauto.Network(self.session)
        output = networks.show_all(500, 0,order = [], 'standard')
        output_dictionary = output.json()
        helplist = output_dictionary['objects']
        finallistofnetworksuid = []
        counter=0
        while counter < len(helplist):
             obj = helplist[counter]
             for item in obj:
                 if item == 'uid':
                      a = obj[item]
                      finallistofnetworksuid.append(a)
                      
             counter = counter + 1       
        return finallistofnetworksuid
    
    def findHostUIDs(self):
        hosts = cpauto.Host(self.session)
        output = hosts.show_all(500, 0, 'DESC')
    
    def isNetworkExists(self, uid, ip, mask):
            network = cpauto.Network(self.session)
            output = network.show(uid)
            outputdictfromserver = output.json()
            IP = outputdictfromserver['subnet4'] 
            MASK = outputdictfromserver['mask-length4']
            
            if (str(IP) == ip and str(MASK) == mask):
                 return True
            else: 
                 return False
             
    
        
def main():
        
    
    session = cpauto.CoreClient('admin', 'cisco123', '192.168.0.250')
          
    output = session.login()
    print output.status_code
    finder = CheckPointFinder(session)
    a = finder.findNetworkUIDs()
    for item in a:
        if finder.isNetworkExists(item, '172.16.10.0', '24'):
            print "IP exists"
    output = session.logout()
    print output.status_code
    
        
if __name__ == "__main__":
    main()
    
        
        
        
        
        


    
    
        
        
         
         
         
    
        
        