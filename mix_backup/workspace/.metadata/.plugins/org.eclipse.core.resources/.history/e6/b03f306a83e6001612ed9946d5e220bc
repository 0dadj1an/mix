

import cpauto


class CheckPointFinder(object):
    def __init__(self, session):
        self.session = session
        self.ip_add = ip_add
        self.mask = mask 
        
        
        
    def findNetworkUIDs(self):
        networks = cpauto.Network(self.session)
        output = networks.show_all()
        output_dictionary = output.json()
        helplist = output_dictionary['objects']
        finallistofnetworksuid = []
        counter=0
        
        while counter < len(helplist):
             obj = helplist[counter]
             for item in obj:
                 if item == 'uid':
                      a = obj[item]
                      finallistofnetworksuid.append(a)
                    
        return finallistofnetworksuid
    
    def findNetwork(self, uid_list):
        network_list = ()
        counter =0
        while counter < len(uid_list):
            obj = uid_list[counter]
            output02 = networks.show(obj)
            outputdictfromserver = output02.json()
            IP = outputdictfromserver['subnet4'] 
            IP = outputdictfromserver['subnet4']
            mask = outputdictfromserver['mask-length4']
            
        count01 = count01 + 1


    
        
        
    
    
        
        
         
         
         
    
        
        