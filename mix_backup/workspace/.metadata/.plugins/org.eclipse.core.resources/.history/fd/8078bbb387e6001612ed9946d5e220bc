

import cpauto


class CheckPointFinder(object):
    def __init__(self, session):
        self.session = session
            
        
    def findNetworkUIDs(self):
        networks = cpauto.Network(self.session)
        output = networks.show_all()
        output_dictionary = output.json()
        helplist = output_dictionary['objects']
        finallistofnetworksuid = []
        counter=0
        while counter < len(helplist):
             obj = helplist[counter]
             for item in obj:
                 if item == 'uid':
                      a = obj[item]
                      finallistofnetworksuid.append(a)
                      
             counter = counter + 1       
        return finallistofnetworksuid
    
    def isNetworkExists(self, uid_list, ip, mask):
            network = cpauto.Network(self.session)
            for item in uid_list:
                output = network.show(item)
                outputdictfromserver = output.json()
                IP = outputdictfromserver['subnet4'] 
                MASK = outputdictfromserver['mask-length4']
            
                if (str(IP) == ip and str(MASK) == mask):
                    return True
                else: 
                    return False
    
            
        
def main():
        
    session = cpauto.CoreClient('admin', 'cisco123', '192.168.0.250')
    output = session.login()
    print output.status_code
    finder = CheckPointFinder(session)
    a = finder.findNetworkUIDs()
    for item in a:
        finder.isNetworkExists(item, '172.16.10.0', '24')
    
    
        
if __name__ == "__main__":
    main()
    
        
        
        
        
        


    
    
        
        
         
         
         
    
        
        